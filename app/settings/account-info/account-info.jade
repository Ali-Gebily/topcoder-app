.account-info-container
  .settings-section
    .section-info
      h2 credentials
      .description Used to log in to your account and cannot be edited. Please contact support@topcoder.com if you need to make changes.

    .section-fields
      .form-label Username
      input.form-field(name="username", value="{{vm.userData.handle}}", disabled=true)

      .form-label email
      input.form-field(name="email", value="{{vm.userData.email}}", disabled=true)

      form(name="vm.newPasswordForm", role="form", ng-submit="vm.newPasswordForm.$valid && vm.submitNewPassword()", novalidate)
        .form-label Current passoword
        input.form-field(
          name="password1", type="password", 
          placeholder="First",
          ng-model="vm.newPasswordForm.password1", 
          maxlength="64", required, 
          ng-class="{'form-field-focused': hasFocus==true}"
        )

        .form-label New Password
        input.form-field(
          name="password2", type="password", 
          placeholder="New Password",
          ng-model="vm.newPasswordForm.password2", 
          maxlength="64", required, 
          ng-class="{'form-field-focused': hasFocus==true}"
        )
        //- .validation-bar(ng-class="{ 'success-bar': (vm.newPasswordForm.password.$valid) }")
        //-   toggle-password-with-tips(ng-if="!vm.isSocialRegistration")

        //-   .tips.password-tips(ng-show="vm.passwordFocus")
        //-     h3 Password Tips:

        //-     p Your password must have:

        //-     p(ng-class="{ 'has-length-between-range': (vm.newPasswordForm.password.$dirty && !vm.newPasswordForm.password.$error.minlength && !vm.newPasswordForm.password.$error.maxlength && !vm.newPasswordForm.password.$error.required) }") At least 8 characters

        //-     p(ng-class="{ 'has-letter': (vm.newPasswordForm.password.$dirty && !vm.newPasswordForm.password.$error.hasLetter) }") At least one letter

        //-     p(ng-class="{ 'has-symbol-or-number': (vm.newPasswordForm.password.$dirty && !vm.newPasswordForm.password.$error.hasSymbolOrNumber) }") At least one number or symbol
      button.button-l(type="submit", ng-disabled="vm.newPasswordForm.$invalid") Save
    

  form(name="vm.updateAccountInfo", role="form", ng-submit="vm.updateAccountInfo.$valid && vm.saveAccountInfo()", novalidate, autocomplete="off")

    .settings-section
      .section-info
        h2  name
        .description Required for legal purposes; will be kept private and not shared with anyone.

      .section-fields
        
          // Stops Chrome from autofilling and autocompleting (along with autocomplete="off" on the form)
          input(autocomplete="false", name="hidden", type="text", style="display:none;")
          .form-label First name 
            span(style="text-transform: none;") &nbsp;(Given name)
          input.form-field(
            name="firstname", type="text", 
            placeholder="First",
            value="{{vm.userData.firstName}}", 
            ng-model="vm.userData.firstName", 
            maxlength="64", required, 
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label Last name
            span(style="text-transform: none;") &nbsp;(Surname)
          input.form-field(
            name="lastname", type="text", 
            placeholder="Last",
            value="{{vm.userData.lastName}}", 
            ng-model="vm.userData.lastName", 
            maxlength="64", required,
            ng-class="{'form-field-focused': hasFocus==true}"
          )
    
    .settings-section
      .section-info
        h2  address
        .description Required for payments and in case we need to mail you something. Will be kept private and not shared with anyone.

      .section-fields          
          .form-label Address
          input.form-field(
            name="address", type="text",
            placeholder="123 Topcoder Ave.",
            value="{{vm.homeAddress.streetAddr1}}",
            ng-model="vm.homeAddress.streetAddr1",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label Address 2 
            span(style="text-transform: none;") &nbsp;(opt., suite, etc.)
          input.form-field(
            name="address2",
            type="text",
            placeholder="Suite 42",
            value="{{vm.homeAddress.streetAddr2}}",
            ng-model="vm.homeAddress.streetAddr2",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label City
          input.form-field(
            name="city", type="text",
            value="{{vm.homeAddress.city}}",
            placeholder="Best City in the World",
            ng-model="vm.homeAddress.city",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label State/Province
          input.form-field(
            name="state", type="text",
            value="{{vm.homeAddress.stateCode}}",
            placeholder="California",
            ng-model="vm.homeAddress.stateCode",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label Zip
          input.form-field(
            name="zipcode", type="text",
            placeholder="Zip"
            value="{{vm.homeAddress.zip}}",
            ng-model="vm.homeAddress.zip",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          .form-label Country
          angucomplete-alt(
            input-name="country",
            input-class="form-field",
            pause="100",
            selected-object="vm.updateCountry",
            local-data="vm.countries",
            initial-value="vm.countryObj",
            search-fields="name",
            title-field="name",
            match-class="angucomplete-highlight",
            minlength="1",
            ng-class="{'form-field-focused': hasFocus==true}"
          )

          //-         .account-info-error
          //-           p.form-error(ng-show="vm.updateAccountInfo.country.$error.required") Please choose a country from the list.


          button.button-l(type="submit", ng-disabled="vm.updateAccountInfo.$invalid", ng-class="{'enabled-button': vm.updateAccountInfo.$valid}") Save
